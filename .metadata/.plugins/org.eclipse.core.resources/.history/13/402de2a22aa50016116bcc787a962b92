import java.util.*; 
public class Register {
	 private boolean open; 
	 private Queue queue; 
	// private ArrayList<Customer> customer_queue = new ArrayList<Customer>(); 
	 
	public Register(boolean status){
		this.open = status;
		this.queue = new Queue(); 
	}
	
	public boolean open(){
		return open = true; 
	}
	
	
	public boolean close(){
		return open = false; 
	}
	
	
	boolean isOpen(){
		if(open== true)
			return true; 
		else
			return false; 
	}
	
	
	public void step(){
			customer_queue.get(0).serve(); 
			
		}
		
	
	public boolean hasCustomer(){
		if (customer_queue.isEmpty()){
				return false; 
		}
		else {
				return true; 
		}
	}
	/*
	 * I am not sure for this implementation 
	 * */
	public boolean currentCustomerIsDone(){
		   return customer_queue.get(0).isDone();
				 
				
	}
	
	
	public Customer removeCurrentCustomer(){
		    Customer c = customer_queue.get(0); 
	        customer_queue.remove(0); 
	        return c; 
			 
	}
	
	public void addToQueue(Customer c) {
		customer_queue.add(customer_queue.size(), c); 
	}

	public int getQueueLength(){
		return customer_queue.size(); 
	}
	
	
	
	public static void main(String [] args) {
		 
		 Customer customer1 = new Customer(2, 6); 
		 Customer customer2 = new Customer(30, 7); 
		 Customer customer3 = new Customer(25, 15); 
		 Customer customer4 = new Customer(60, 30); 
		 Customer customer5 = new Customer(100,55); 
		 
	     Register one = new Register(true, 0); 
	     one.addToQueue(customer1); 
	     one.addToQueue(customer2);
	     one.addToQueue(customer3);
	     one.addToQueue(customer4); 
	     one.addToQueue(customer5);
	     System.out.println("The number of customer in the queue :" + one.getQueueLength());
	     System.out.println("The register is open :" + one.isOpen());
	     System.out.println("The register has customer :" + one.hasCustomer());
	     //one.removeCurrentCustomer();
	     //System.out.println("The number of customer in the queue :" + one.getQueueLength());
	     one.step();
	     one.step();
	     if (one.currentCustomerIsDone())
	     {
	    	 one.removeCurrentCustomer();
	     }
	     System.out.println("The number of customer in the queue :" + one.getQueueLength());
	     
	}

}
